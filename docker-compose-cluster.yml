services:
  mongo:
    image: mongo:7
    container_name: mongo
    restart: unless-stopped
    command: ["--replSet", "rs0", "--bind_ip", "localhost,mongo"]
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - mongo-cluster

  mongo2:
    image: mongo:7
    container_name: mongo2
    restart: unless-stopped
    command: ["--replSet", "rs0", "--bind_ip", "localhost,mongo2"]
    depends_on:
      - mongo
    ports:
      - "27018:27017"
    volumes:
      - mongo-2-data:/data/db
    networks:
      - mongo-cluster

  mongosetup:
    image: mongo:7
    depends_on:
      - mongo
      - mongo2
    volumes:
      - ./mongo_setup.sh:/mongo_setup.sh:ro
    restart: "no"
    entrypoint: ["bash", "/mongo_setup.sh"]
    networks:
      - mongo-cluster

  backend:
    build: .
    container_name: scraper-backend
    environment:
      - SERVER_PORT=8000
      - MONGODB_URI=mongodb://mongo:27017/scraped
      - MONGODB_DB=scraped
      - MAX_CONCURRENCY=4
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    depends_on:
      - mongo
    security_opt:
      - seccomp:unconfined
      - no-new-privileges:false
    shm_size: 1gb
    ports:
      - "8000:8000"
    networks:
      - mongo-cluster
  
  uptimekuma:
    image: louislam/uptime-kuma:1
    container_name: uptimekuma
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - uptimekuma-data:/app/data
    networks:
      - mongo-cluster

networks:
  mongo-cluster:
    driver: bridge

volumes:
  mongo-data:
    name: scraper_mongo_data
  mongo-2-data:
  uptimekuma-data: